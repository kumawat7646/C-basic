1)
1-->10 number print 
dry run 
laptop 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=1;
    while(i<=10)
    {
        printf("%d\n",i);
        i++;
    }
    
    
    return 0;
}
----------------------------------------------------------
2)
1-->100 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=1;
    while(i<=100)
    {
        printf("%d\n",i);
        i++;
    }
    
    
    return 0;
}
----------------------------------------------------------
3)
50--->500

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=50;
    while(i<=500)
    {
        printf("%d\n",i);
        i++;
    }
    
    
    return 0;
}
----------------------------------------------------------
4)
34---->89 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=34;
    while(i<=89)
    {
        printf("%d\n",i);
        i++;
    }
    
    
    return 0;
}
----------------------------------------------------------
5)
1--->100 number print incrment 2 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=1;
    while(i<=100)
    {
        printf("%d\n",i);
        i+=2;
    }
    
    
    return 0;
}
----------------------------------------------------------
6)
34---->89 

number print incrment 5

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=34;
    while(i<=89)
    {
        printf("%d\n",i);
        i+=5;
    }
    
    
    return 0;
}
-----------------------------------------------
7)
10---->1 
dry run +laptop 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=10;
    while(i>=1)
    {
        printf("%d\n",i);
        i--;
    }
    
    
    return 0;
}
-----------------------------------------------
8)
100---->1

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=100;
    while(i>=1)
    {
        printf("%d\n",i);
        i--;
    }
    
    
    return 0;
}
-----------------------------------------------
9)
500--->50 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=500;
    while(i>=50)
    {
        printf("%d\n",i);
        i--;
    }
    
    
    return 0;
}
-----------------------------------------------
10)
67--->23 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int i=63;
    while(i>=23)
    {
        printf("%d\n",i);
        i--;
    }
    
    
    return 0;
}
----------------------------------------
11)
user input::
1 :
1--->10 number 


2:
98--->67 number 


3:
starting point 
ending point 

4 :
10---->1 

5:
67--->98

6 :
starting 
ending 
reverse order 

input mismatch 

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int num;
    printf("give input between 1-6:");
    scanf("%d",&num);
    
    if(num==1)
    {
        int i=1;
        while(i<=10)
        {
            printf("%d\n",i);
            i++;
        }
    }
    
    else if(num==2)
    {
        int i=98;
        while(i>=67)
        {
            printf("%d\n",i);
            i--;
        }
    }
    
    else if(num==3)
    {
        int s,e;
        printf("enter the starting point value:");
        scanf("%d",&s);
        printf("enter the ending point value:");
        scanf("%d",&e);
        
        int i=s;
        while(i<=e)
        {
            printf("%d\n",i);
            i++;
        }
    }
    
    else if(num==4)
    {
        int i=10;
        while(i<=1)
        {
            printf("%d\n",i);
            i--;
        }
    }
    
    else if(num==5)
    {
        int i=67;
        while(i<=98)
        {
            printf("%d\n",i);
            i++;
        }
    }
    
    else if(num==6)
    {
        int s,e;
        printf("enter the starting point value:");
        scanf("%d",&s);
        printf("enter the ending point value:");
        scanf("%d",&e);
        
        int i=s;
        while(i>=e)
        {
            printf("%d\n",i);
            i--;
        }
    }
    
    else
    {
        printf("mismatch");
    }
    
    
    
    return 0;
}